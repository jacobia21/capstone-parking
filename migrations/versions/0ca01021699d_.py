"""empty message

Revision ID: 0ca01021699d
Revises: 098ad7dfe4b7
Create Date: 2020-09-21 18:49:59.158589

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0ca01021699d'
down_revision = '098ad7dfe4b7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'RESOLVED', name='logstatus'), nullable=True),
    sa.Column('type', sa.Enum('WEBSITE', 'DATBASE', 'HARDWARE', name='logtype'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lot_name'), 'lot', ['name'], unique=True)
    op.create_table('zone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_zone_color'), 'zone', ['color'], unique=True)
    op.create_index(op.f('ix_zone_name'), 'zone', ['name'], unique=True)
    op.create_table('camera',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ON', 'OFF', name='camerastatus'), nullable=True),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lot_id'], ['lot.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lotzone',
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lot_id'], ['lot.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('lot_id', 'zone_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('middle_initial', sa.String(length=1), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['admin_group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name', 'last_name', 'middle_initial')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_middle_initial'), 'user', ['middle_initial'], unique=False)
    op.create_table('control_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_x', sa.Integer(), nullable=True),
    sa.Column('start_y', sa.Integer(), nullable=True),
    sa.Column('end_x', sa.Integer(), nullable=True),
    sa.Column('end_y', sa.Integer(), nullable=True),
    sa.Column('camera_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('space',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('availability', sa.Enum('AVAILABLE', 'NOT_AVAILABLE', 'RESERVED', name='spaceavailability'), nullable=True),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['camera_id'], ['camera.id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['lot.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('space_dimensions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_x', sa.Integer(), nullable=True),
    sa.Column('start_y', sa.Integer(), nullable=True),
    sa.Column('end_x', sa.Integer(), nullable=True),
    sa.Column('end_y', sa.Integer(), nullable=True),
    sa.Column('space_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['space_id'], ['space.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('space_dimensions')
    op.drop_table('space')
    op.drop_table('control_points')
    op.drop_index(op.f('ix_user_middle_initial'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('lotzone')
    op.drop_table('camera')
    op.drop_index(op.f('ix_zone_name'), table_name='zone')
    op.drop_index(op.f('ix_zone_color'), table_name='zone')
    op.drop_table('zone')
    op.drop_index(op.f('ix_lot_name'), table_name='lot')
    op.drop_table('lot')
    op.drop_table('logs')
    op.drop_table('admin_group')
    # ### end Alembic commands ###
